services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '8080:8080'
    volumes:
      - .:/app
    env_file:
      - ./apps/auth/.env

  pokemon:
    build:
      context: .
      dockerfile: ./apps/pokemon/Dockerfile
      target: development
    command: npm run start:dev pokemon
    ports:
      - '8081:8081'
    volumes:
      - .:/app
    env_file:
      - ./apps/pokemon/.env

  spawns:
    build:
      context: .
      dockerfile: ./apps/spawns/Dockerfile
      target: development
    command: npm run start:dev spawns
    ports:
      - '8082:8082'
      - '8083:8083'
    volumes:
      - .:/app
    env_file:
      - ./apps/spawns/.env

  inventory:
    build:
      context: .
      dockerfile: ./apps/inventory/Dockerfile
      target: development
    command: npm run start:dev inventory
    ports:
      - '8084:8084'
    volumes:
      - .:/app
    env_file:
      - ./apps/inventory/.env

  battle:
    build:
      context: .
      dockerfile: ./apps/battle/Dockerfile
      target: development
    command: npm run start:dev battle
    ports:
      - '8085:8085'
    volumes:
      - .:/app
    env_file:
      - ./apps/battle/.env

  mongo-server:
    image: mongo
    logging:
      driver: none

  rmq-server:
    image: rabbitmq
    logging:
      driver: none

  redis-server:
    image: redis
    logging:
      driver: none
